# ===============================================
# Caf√© Crave Website - Apache .htaccess Configuration
# For Hostinger Hosting
# ===============================================

# Enable Rewrite Engine
<IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteBase /

    # ===============================================
    # HTTPS Redirect (Force SSL)
    # ===============================================
    # Redirect all HTTP traffic to HTTPS
    RewriteCond %{HTTPS} off
    RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

    # ===============================================
    # WWW Redirect (Optional - Choose One)
    # ===============================================
    # Option 1: Redirect www to non-www (recommended)
    RewriteCond %{HTTP_HOST} ^www\.(.+)$ [NC]
    RewriteRule ^(.*)$ https://%1/$1 [R=301,L]

    # Option 2: Redirect non-www to www (uncomment if preferred)
    # RewriteCond %{HTTP_HOST} !^www\. [NC]
    # RewriteCond %{HTTP_HOST} !^localhost [NC]
    # RewriteRule ^(.*)$ https://www.%{HTTP_HOST}/$1 [R=301,L]

    # ===============================================
    # React Router - SPA Routing
    # ===============================================
    # Don't rewrite files or directories that exist
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-l

    # Don't rewrite API requests (if you have backend API)
    RewriteCond %{REQUEST_URI} !^/api/

    # Rewrite everything else to index.html to allow React Router to handle routing
    RewriteRule ^ index.html [L]
</IfModule>

# ===============================================
# Security Headers
# ===============================================
<IfModule mod_headers.c>
    # Prevent clickjacking
    Header always set X-Frame-Options "SAMEORIGIN"

    # XSS Protection
    Header always set X-XSS-Protection "1; mode=block"

    # Prevent MIME type sniffing
    Header always set X-Content-Type-Options "nosniff"

    # Referrer Policy
    Header always set Referrer-Policy "strict-origin-when-cross-origin"

    # Content Security Policy (adjust as needed)
    Header always set Content-Security-Policy "upgrade-insecure-requests"

    # Remove sensitive server information
    Header unset Server
    Header unset X-Powered-By
</IfModule>

# ===============================================
# MIME Types
# ===============================================
<IfModule mod_mime.c>
    # JavaScript
    AddType application/javascript js mjs
    AddType application/json json

    # Web fonts
    AddType font/woff woff
    AddType font/woff2 woff2
    AddType application/vnd.ms-fontobject eot
    AddType font/ttf ttf
    AddType font/otf otf

    # Images
    AddType image/svg+xml svg svgz
    AddType image/webp webp

    # Other
    AddType text/css css
</IfModule>

# ===============================================
# Compression (GZIP)
# ===============================================
<IfModule mod_deflate.c>
    # Compress HTML, CSS, JavaScript, Text, XML and fonts
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/json
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/vnd.ms-fontobject
    AddOutputFilterByType DEFLATE application/x-font
    AddOutputFilterByType DEFLATE application/x-font-opentype
    AddOutputFilterByType DEFLATE application/x-font-otf
    AddOutputFilterByType DEFLATE application/x-font-truetype
    AddOutputFilterByType DEFLATE application/x-font-ttf
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE font/opentype
    AddOutputFilterByType DEFLATE font/otf
    AddOutputFilterByType DEFLATE font/ttf
    AddOutputFilterByType DEFLATE font/woff
    AddOutputFilterByType DEFLATE font/woff2
    AddOutputFilterByType DEFLATE image/svg+xml
    AddOutputFilterByType DEFLATE image/x-icon
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/javascript
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/xml
</IfModule>

# ===============================================
# Browser Caching
# ===============================================
<IfModule mod_expires.c>
    ExpiresActive On

    # Default expiration: 1 hour after request
    ExpiresDefault "access plus 1 hour"

    # HTML (no caching for SPA)
    ExpiresByType text/html "access plus 0 seconds"

    # CSS and JavaScript (1 year - use versioning/hashing in filenames)
    ExpiresByType text/css "access plus 1 year"
    ExpiresByType application/javascript "access plus 1 year"
    ExpiresByType application/x-javascript "access plus 1 year"

    # Images (1 month)
    ExpiresByType image/gif "access plus 1 month"
    ExpiresByType image/jpeg "access plus 1 month"
    ExpiresByType image/png "access plus 1 month"
    ExpiresByType image/webp "access plus 1 month"
    ExpiresByType image/svg+xml "access plus 1 month"
    ExpiresByType image/x-icon "access plus 1 year"

    # Fonts (1 year)
    ExpiresByType font/ttf "access plus 1 year"
    ExpiresByType font/otf "access plus 1 year"
    ExpiresByType font/woff "access plus 1 year"
    ExpiresByType font/woff2 "access plus 1 year"
    ExpiresByType application/font-woff "access plus 1 year"

    # Media (1 month)
    ExpiresByType audio/ogg "access plus 1 month"
    ExpiresByType video/mp4 "access plus 1 month"
    ExpiresByType video/webm "access plus 1 month"

    # JSON (no caching)
    ExpiresByType application/json "access plus 0 seconds"
</IfModule>

# ===============================================
# Cache-Control Headers
# ===============================================
<IfModule mod_headers.c>
    # HTML - no caching (for SPA)
    <FilesMatch "\.(html|htm)$">
        Header set Cache-Control "no-cache, no-store, must-revalidate"
        Header set Pragma "no-cache"
        Header set Expires 0
    </FilesMatch>

    # CSS and JavaScript - cache but revalidate
    <FilesMatch "\.(css|js|mjs)$">
        Header set Cache-Control "public, max-age=31536000, immutable"
    </FilesMatch>

    # Images
    <FilesMatch "\.(jpg|jpeg|png|gif|webp|svg|ico)$">
        Header set Cache-Control "public, max-age=2592000"
    </FilesMatch>

    # Fonts
    <FilesMatch "\.(ttf|otf|woff|woff2|eot)$">
        Header set Cache-Control "public, max-age=31536000, immutable"
    </FilesMatch>
</IfModule>

# ===============================================
# Error Pages (Optional)
# ===============================================
# Uncomment and customize if you want custom error pages
# ErrorDocument 404 /index.html
# ErrorDocument 500 /index.html

# ===============================================
# File Access Protection
# ===============================================
# Deny access to hidden files (like .env, .git, etc.)
<FilesMatch "^\.">
    Require all denied
</FilesMatch>

# Protect package.json, tsconfig, etc.
<FilesMatch "(package\.json|package-lock\.json|tsconfig\.json|\.gitignore|\.env)$">
    Require all denied
</FilesMatch>

# ===============================================
# Directory Browsing
# ===============================================
# Disable directory browsing
Options -Indexes

# ===============================================
# Follow Symbolic Links
# ===============================================
# Enable following symbolic links (required for some setups)
Options +FollowSymLinks

# ===============================================
# UTF-8 Encoding
# ===============================================
AddDefaultCharset UTF-8
<IfModule mod_mime.c>
    AddCharset UTF-8 .html .css .js .json .xml .rss .atom
</IfModule>

